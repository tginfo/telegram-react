{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Utils/Media.js","Assets/Icons/Close.js","Stores/PlayerStore.js","Utils/User.js","Workers/Helpers.js","Workers/BlobInflator.js","Components/Message/Media/Sticker.js","Components/Viewer/FileProgress.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Assets/Icons/Download.js","Components/Message/MessageAuthor.js","Components/Tile/User.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VideoNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["FileStore","EventEmitter","constructor","super","reset","this","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","local","idb_key","has","is_downloading_completed","get","delete","store","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","getReadWriteStore","faultCallback","send","file_id","response","data","then","priority","some","x","cancelGetRemoteFile","filter","only_if_pending","uploadFile","cancelUploadFile","message_ids","revoke","userId","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","loadAnimationContent","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","loadVideoContent","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","Blob","type","saveData","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","cancelLoadMediaViewerContent","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","event","JSON","parse","target","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","React","Component","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","prevUserId","prevUsername","render","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","minithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trim","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","createSvgIcon","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","getRandomInt","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","randomString","random","toString","slice","worker","PakoWorker","handlers","inflateBlob","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","componentDidCatch","errorInfo","shouldComponentUpdate","nextProps","nextState","nextContext","blur","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","componentWillUnmount","pause","paused","preview","thumbnailSrc","src","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","icon","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","hint","sticker_set_ids","is_installed","assign","foundStickers","setAnimationData","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","thumbnailSize","prevPhoto","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","undefined","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","replace","S","val","len","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","displayText","mail","prevUrl","prevDisplayText","safe","isUrlSafe","decodedUrl","getHref","lowerCaseUrl","startsWith","viewerContent","prevInstantView","hasPrev","MessageAuthor","openUserCommand","openChatCommand","User","showStatus","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","blocks","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","mime_type","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","getPow","includes","getString","totalAmount","amount","pow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","maxLength","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","audioTitle","audioSubtitle","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","playerDuration","Infinity","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","PollStore","allow_multiple_answers","is_anonymous","isAnonymous","allowMultipleAnswers","newType","correct_option_id","option","source1","source2","getInputMessagePoll","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","decode","input","extra","output","charCodeAt","RangeError","encode","fromCharCode","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","Error","ToASCII","domain_array","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","stop","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","draw","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","dp","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","min","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","getMeasuredWidth","clientWidth","createParticle","fall","particle","colors","xOffset","yOffset","started","startedFall","lastUpdateTime","startFall","newTime","clearRect","p","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","onChange","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","getOptionType","getOptionIsCorrect","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","textPrimary","fillRule","mixBlendMode","opacity","DocumentAction","Download","thumb","viewBox","data-name","data-ext","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","element","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","focus","searchResultsMap","filteredResults","foundChats","aria-describedby","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","find","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","getSnapshotBeforeUpdate","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","getListClassName","getSearchListClassName","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","hasSearch","getItemTemplate","getHeader","searchMessages","onScroll","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","isValidEntityType","getTitleFromUrl","hostname","webPage","display_url","typeUrl","SharedLinks","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","label","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","year","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","prevMessageId","Pending","Sent","Succeeded","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","getListRenderIds","getListRef","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","oldChatIds","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","scrollToTop","dialogs","lastPinnedId","innerListRef","KeyboardHandler","manager","handler","add","remove","TopChat","PureComponent","onDelete","Delete","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","setInitQuery","searchInput","ANIMATION_DURATION_100MS","SidebarPage","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","withTheme","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","isEnabled","showPreview","Checkbox","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","load","removeItem","clear","CacheStore","cache","contacts","CacheManager","saveChatsInternal","loadCache","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","getCache","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","saveChats","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","userIds","localeCompare","throttle","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateContacts","openContacts","onClientUpdateSettings","openSettings","meChatId","onClientUpdateArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsHeaderRef","visible","handleSaveCache","handleCloseArchive","handleCloseContacts","mainItems","archiveItems","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textInputRef","textError","urlError","onDone","handleCancel","onCancel","textRef","urlRef","prevOpen","flexDirection","margin","autoComplete","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","readImageSize","photoWidth","photoHeight","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaFromFile","setFormattedText","getRangeAt","has_stickers","accept","lastAction","setTyping","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","handleDoneEditMedia","editMessageMedia","performance","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onSendInternal","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","replyMessage","disableNotification","disable_notification","pinMessage","handleEdit","editMessage","selectMessage","canCopyLink","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","cancelLoadMessageContents","getMessagePhoto","getMessageSticker","oldMessageId","showMessageTitle","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","showMessageDate","prevDate","nextMessage","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateChatBackground","wallpaperSrc","onUpdateChatDetailsVisibility","messagesList","selectedCount","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","componentWillReceiveProps","frameBorder","Embedded","html","prevHtml","setIframeSource","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","onClientUpdateDocumentBlob","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","prevMedia","speed","isPlaying","thumbnailBlob","videoWidth","videoHeight","handleContentClick","onVolumeChange","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.ddc5b1dc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background);\n    });\n}\n\nexport function loadBackgroundContent(store, background) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport {\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_SIZE\n} from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.split('<br>').join('\\n');\n\n    // console.log(`[ge] start text=${text}`);\n\n    let index = -1; // first index of end tag\n    let lastIndex = 0; // first index after end tag\n    let start = -1; // first index of start tag\n    let isPre = false;\n    const mono = '`';\n    const pre = '```';\n    const bold = '**';\n    const italic = '__';\n\n    // 0 looking for html entities\n    const result = new DOMParser().parseFromString(text, 'text/html');\n    let offset = 0;\n    let length = 0;\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    // console.log(`[ge] pre and code text=${text}`, entities);\n    // 2 looking for bold, italic entities\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n    // console.log(`[ge] result text=${text}`, entities);\n\n    return { text, entities };\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n    }\n\n    return firstName ? firstName.charAt(0) : lastName ? lastName.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.windowFocused &&\n                ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                    (this.ivInView && !this.openIVMedia))\n            ) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            src={src}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioShortTitle(audio);\n        const audioSubtitle = getAudioSubtitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action'>{audioSubtitle}</div>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(update.currentTime, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(update.currentTime, playerDuration, active);\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(active ? currentTime : 0, playerDuration, true);\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        // thumbWrapper: 'voice-note-slider-thumb-wrapper',\n                        thumb: 'voice-note-slider-thumb'\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"117d1962405b2cd7e57c.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function copy(text) {\n    let element;\n\n    try {\n        element = document.createElement('textarea');\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.select();\n\n        const successful = document.execCommand('copy');\n        if (!successful) {\n            console.error('unable to copy using execCommand');\n        }\n    } catch {\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {title.charAt(0)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div\n                    className='shared-photo'\n                    style={style}\n                    onClick={openMedia}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    <div\n                        className='shared-photo-content'\n                        style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div\n                    className='shared-photo'\n                    style={style}\n                    onClick={openMedia}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        // console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { openArchive } from '../../Actions/Client';\nimport './Archive.css';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount,\n    showChatUnreadMessageIcon\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMessageIcon = false; //showChatUnreadMessageIcon(chatId);\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMessageIcon && <i className='dialog-badge-unread' />}\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadMessageIcon && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(isSelected ? 'dialog-active' : 'dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    render() {\n        const { t, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            } else {\n                searchInput.innerText = null;\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n\n        let content = null;\n        let showClose = false;\n        if (openSearch) {\n            showClose = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.target.blur();\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) onClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div\n                    className='shared-photo-content'\n                    style={{\n                        backgroundImage: `url(${thumbSrc || miniSrc})`,\n                        backgroundSize: 'cover',\n                        backgroundPosition: '50%'\n                    }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                {isSelected && (\n                    <>\n                        <div className='wallpaper-selected' />\n                        <div className='wallpaper-selected-inner' />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper,\n            src\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    {wallpapers.map(x => (\n                        <Wallpaper\n                            key={x.id}\n                            wallpaper={x}\n                            isSelected={x.id === selectedId}\n                            onClick={this.handleClick}\n                        />\n                    ))}\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            autoFocus={false}\n                            className='settings-list-item'\n                            button\n                            onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem\n                            autoFocus={false}\n                            className='settings-list-item'\n                            button\n                            onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n            '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {users.user_ids.map(x => (\n                                    <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock} />\n                                ))}\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n\n        (files || []).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        if (onClose) onClose();\n    };\n\n    render() {\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        const { isChatDetailsVisible } = AppStore;\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            isChatDetailsVisible,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div\n                    className={classNames('dialogs', {\n                        'dialogs-third-column': isChatDetailsVisible\n                    })}>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={200}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={messageId || editMessageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { readImageSize } from '../../Utils/Common';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, open } = this.props;\n        if (open && open !== prevProps.open) {\n            this.file = null;\n            this.media = null;\n\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return;\n\n            const { content } = message;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (!text && !caption) return;\n\n            setTimeout(() => {\n                const element = this.captionRef.current;\n                if (!element) return;\n\n                if (text) {\n                    this.setFormattedText(text);\n                } else if (caption) {\n                    this.setFormattedText(caption);\n                } else {\n                    element.innerText = null;\n                }\n\n                focusInput(element);\n            }, 0);\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, onDone } = this.props;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        let content = null;\n        if (this.file) {\n            readImageSize(this.file, result => {\n                content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: result.name, data: result },\n                    width: result.photoWidth,\n                    height: result.photoHeight,\n                    caption\n                };\n                onDone(null, content);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            });\n            this.file = null;\n        } else {\n            onDone(caption, null);\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, onCancel } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.file = file;\n            this.getMediaFromFile(file, result => {\n                this.media = result;\n                this.forceUpdate();\n            });\n        });\n\n        element.value = '';\n    };\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    getMediaFromFile(file, callback) {\n        if (!file) {\n            callback(null);\n        }\n\n        if (file.type.startsWith('image')) {\n            readImageSize(file, result => {\n                const fileId = -this.getRandomInt(1, 1000000);\n                FileStore.setBlob(fileId, result);\n\n                callback({\n                    '@type': 'messagePhoto',\n                    photo: {\n                        '@type': 'photo',\n                        has_stickers: false,\n                        minithumbnail: null,\n                        sizes: [\n                            {\n                                '@type': 'photoSize',\n                                photo: { '@type': 'file', id: fileId },\n                                width: result.photoWidth,\n                                height: result.photoHeight\n                            }\n                        ]\n                    }\n                });\n            });\n        } else {\n            callback(null);\n        }\n    }\n\n    render() {\n        const { classes, chatId, messageId, open, t } = this.props;\n        if (!open) return null;\n\n        const { defaultText, defaultUrl, openEditUrl } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const media = getMedia({ content: this.media }) || getMedia(message, null);\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    <IconButton\n                        disableRipple={true}\n                        aria-label={t('Edit')}\n                        className='edit-media-dialog-edit-button'\n                        size='small'\n                        onClick={this.handleEditMedia}>\n                        <EditIcon fontSize='inherit' />\n                    </IconButton>\n                    <input\n                        ref={this.editMediaRef}\n                        className='inputbox-attach-button'\n                        type='file'\n                        accept='image/*'\n                        onChange={this.handleEditMediaComplete}\n                    />\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Edit')}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    open: PropTypes.bool\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia: messageId !== 0 && isEditedMedia(chatId, messageId)\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    this.focusInput();\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        innerHTML = innerHTML.replace(/<div><br><\\/div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<\\/div>/gi, '');\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText, result => {});\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        const files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        const files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else if (replyToMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.setState({ files });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    async editMessageMedia(content, callback) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        // console.log('[em] editMessageMedia send', content);\n        const result = await TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n\n        callback(result);\n    }\n\n    async editMessageCaption(caption, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        const result = await TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n\n        callback(result);\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleDoneEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content, () => {});\n            return;\n        }\n\n        this.editMessageCaption(caption, () => {});\n    };\n\n    closeEditMediaDialog() {\n        this.setState(\n            {\n                openEditMedia: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    onDone={this.handleDoneEditMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle,\n    isChannelChat,\n    isPrivateChat,\n    isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        AppStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                {!isChannelChat(chatId) &&\n                                    (count === 1\n                                        ? 'This will delete it for everyone in this chat'\n                                        : 'This will delete them for everyone in this chat')}\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={revoke}\n                                                onChange={this.handleRevokeChange}\n                                                color='primary'\n                                            />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all'\n                                        }\n                                    />\n                                )}\n                            </>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = AppStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragParams } = this.state;\n\n        return (\n            <>\n                {dragParams && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport {\n    canMessageBeClosed,\n    canMessageBeDeleted,\n    canMessageBeEdited,\n    canMessageBeForwarded,\n    canMessageBeUnvoted,\n    isMessagePinned\n} from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport {\n    clearSelection,\n    deleteMessages,\n    editMessage,\n    forwardMessages,\n    replyMessage,\n    selectMessage\n} from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose } = this.props;\n        const { copyLink } = this.state;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                        )}\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    canCopyLink: PropTypes.bool\n};\n\nexport default withTranslation()(MessageMenu);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            canCopyLink: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const canCopyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                canCopyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const { emojiMatches, selected, highlighted, shook, canCopyLink, contextMenu, left, top } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    canCopyLink={canCopyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateEditMessage',\n                        chatId: message.chat_id,\n                        messageId: message.id\n                    });\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId: message.chat_id,\n                    messageId: message.id\n                });\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaperSrc } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaperSrc !== wallpaperSrc) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n    }\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper, src } = update;\n\n        this.setState({\n            wallpaper,\n            wallpaperSrc: src\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount, wallpaperSrc } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        let style = null;\n        if (wallpaperSrc) {\n            style = {\n                backgroundImage: `url(${wallpaperSrc})`\n                // transition: 'background-image .25s ease'\n            };\n        }\n\n        return (\n            <div\n                className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}\n                style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}