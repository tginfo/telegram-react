{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Components/Additional/MentionLink.js","Utils/Message.js","Assets/Icons/Close.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Components/Player/Steaming/Utils/Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Parser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Token.js","Components/Player/Steaming/MP3/ID3v2/FrameParser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Parser.js","Components/Player/Steaming/MP3/ID3Parser.js","Utils/Media.js","Utils/User.js","Stores/PlayerStore.js","Components/Viewer/FileProgress.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Components/Tile/UserTile.js","Stores/StickerStore.js","Components/Tile/User.js","Assets/Icons/Download.js","Components/Message/Media/Photo.js","Components/Player/Steaming/Utils/Common.js","Stores/BasicGroupStore.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Components/Message/MessageAuthor.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Utils/Supergroup.js","Assets/Icons/Check.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VideoNote.js","Components/Message/Media/VoiceNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Player/Steaming/MP4/MP4Source.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","cancelLoadAnimationContent","cancelGetRemoteFile","loadAnimationContent","PRELOAD_ANIMATION_SIZE","cancelLoadAnimationThumbnailContent","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","cancelLoadBigPhotoContent","getSize","PHOTO_BIG_SIZE","loadBigPhotoContent","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","cancelLoadVideoContent","loadVideoContent","supports_streaming","streaming","PRELOAD_VIDEO_SIZE","cancelLoadVideoThumbnailContent","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerMinithumbnail","minithumbnail","getViewerThumbnail","getViewerFile","getMediaMiniPreview","getMediaPreviewFile","getMediaFile","mime_type","cancelLoadIVMediaViewerContent","blocks","cancelLoadMediaViewerContent","loadIVMediaViewerContent","useSizeLimit","loadMediaViewerContent","cancelPreloadIVMediaViewerContent","index","preload","cancelPreloadMediaViewerContent","history","preloadMediaViewerContent","preloadIVMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","full","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","isCreator","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","getBoldItalicEntities","isPre","indexOf","language","lastChar","firstChar","getMonoPreEntities","DOMParser","parseFromString","finalText","childNodes","nodeName","getHTMLEntities","replace","join","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","createSvgIcon","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","UINT32SYNCSAFE","buf","UINT8","UINT32_BE","UINT24_BE","UINT16_BE","ASCII_TEXT","len","TextDecoder","decode","slice","Id3v1StringType","trimRightNull","trim","undefined","ID3v1Header","artist","album","year","comment","zeroByte","track","genre","ID3v1Parser","buffer","hasID3v1Header","ID3v2Header","fileIdentifier","version","major","revision","flags","raw","unsynchronisation","strtokBITSET","isExtendedHeader","expIndicator","ExtendedHeader","extendedFlags","sizeOfPadding","crcDataPresent","crcData","TextEncodingToken","encoding","bom","FrameParser","output","debug","decodeString","splitValue","tag","trimArray","ID3v2Parser","tags","frameHeaderLength","getFrameHeaderLength","id3Header","frameHeaderBytes","frameHeader","readFrameHeader","frameDataBytes","readFrameData","extendedHeader","parseId3Data","dataLen","parseMetadata","Error","parseExtendedHeader","readI","writeI","majorVer","includeCovers","warningCollector","frameParser","readData","format","removeUnsyncBytes","data_length_indicator","tag_alter_preservation","file_alter_preservation","read_only","grouping_identity","compression","encryption","v","readFrameFlags","hasID3v2Header","ID3Parser","fr","readAsArrayBuffer","getArrayBuffer","arrayBuffer","Uint8Array","id3Tags","artistTag","find","titleTag","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaTags","src","addEventListener","trunc","getMediaDocumentFromFile","getRandomInt","name","album_cover_minithumbnail","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","worker","PakoWorker","handlers","inflateBlob","random","toString","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","hint","sticker_set_ids","is_installed","assign","foundStickers","User","showStatus","is_contact","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","LOG","logSourceBufferRanges","sourceBuffer","ranges","buffered","pendingUpdates","bit","label","readUTF16String","readUTF8String","readWindows1292String","pos0","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","opacity","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","onClientUpdateMediaSeeking","playerDuration","seekProgress","seeking","timeString","getTimeString","onClientUpdateMediaSeek","Infinity","onClientUpdateMediaTime","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","strings","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","isPublicSupergroup","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","input","extra","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","ToASCII","domain_array","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","dragging","handleMouseDown","handleChangeCommitted","handleChange","thumb","min","step","onChange","onChangeCommitted","onMouseDown","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","sourceRef","getTracks","stop","load","progressTime","clamp","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","DocumentAction","Download","viewBox","data-name","data-ext","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","clipboard","writeText","copyOld","element","successful","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","focus","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","aria-describedby","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","alignItems","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","currentIndex","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","Archive","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveChatsInternal","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","onChoose","handleAttach","attachPhotoRef","handleAttachComplete","fileURL","defaultURL","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","NewChannel","defaultPhoto","defaultPhotoFile","titleRef","descriptionRef","defaultPhotoURL","file_type","UserChip","divRef","offsetLeft","offsetTop","offsetWidth","div","cssText","AddParticipants","newArray","selectedItems","focusedItem","newMap","newFocusedItem","isDeleting","wrapPanel","wrapPanelRef","prevHeight","prevOffsetHeight","prevMap","itemsRef","prevCSSText","prevScrollTop","currentHeight","collapsed","scrollIntoView","animateItems","selectedItemsMap","publicItems","publicChats","handleSearchClose","handleBackspace","lastItem","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","transition","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","onCancel","textRef","urlRef","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","editMessageAction","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","sendAsFile","performance","cancel","isMediaEditing","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","Slider","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","synchronous","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","MediaInfo","dateHint","tileControl","MP4Source","getBufferAsync","handleSourceBufferUpdateEnd","mediaSource","mp4file","updating","sampleNum","isLast","releaseUsedSamples","appendBuffer","readyState","sourceBuffers","endOfStream","nextBufferStart","ready","bufferedTime","beforeMoovBufferSize","moovBufferSize","bufferSize","seekBufferSize","currentBufferSize","nbSamples","init","MediaSource","mp4File","MP4Box","createFile","onMoovStart","onError","onReady","isFragmented","timescale","fragment_duration","tracks","addSourceBuffer","initSegs","initializeSegmentation","onupdateend","onSegment","is_last","nb_samples","timestampOffset","loadNextBuffer","codec","trackType","isTypeSupported","setSegmentOptions","seekInfo","seek","hasRange","nextBuffer","fileStart","byteLength","flush","MediaViewerContent","updateAnimationData","supportsStreaming","getURL","handleSeeking","prevTimeout","handleSeeked","handlePlayerSeeked","timeUpdate","handleProgress","handleWaiting","isVideo","isAnimation","isLottie","onSeeking","onSeeked","onWaiting","onProgress","filePart","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.9da49556.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction cancelLoadAnimationContent(animation) {\n    const { animation: file } = animation;\n    if (!file) return;\n\n    const { id } = file;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction cancelLoadAnimationThumbnailContent(animation){\n    if (!animation) return;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction cancelLoadBigPhotoContent(photo) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction cancelLoadVideoContent(video) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file, supports_streaming } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    if (supports_streaming && TdLibController.streaming) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction cancelLoadVideoThumbnailContent(video) {\n    if (!video) return;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nexport function getViewerMinithumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'document': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'photo': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'video': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nexport function getMediaMiniPreview(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.minithumbnail) {\n                return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.minithumbnail) {\n                return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.minithumbnail) {\n                    return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n                }\n\n                if (document && document.minithumbnail) {\n                    return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n                }\n\n                if (video && video.minithumbnail) {\n                    return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n                }\n\n                if (photo && photo.minithumbnail) {\n                    return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video && video.minithumbnail) {\n                return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video && video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null, ''];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation, media.mime_type];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo, ''];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document, document.mime_type];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video, media.mime_type];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null, ''];\n\n    const { content } = message;\n    if (!content) return [0, 0, null, ''];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                const { width, height, animation: file, mime_type } = animation;\n                return [width, height, file, mime_type, false];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, '', false];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                const { document: file, mime_type } = document;\n                return [50, 50, file, mime_type, false];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, '', false];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    const { width, height, animation: file, mime_type } = animation;\n                    return [width, height, file, mime_type, false];\n                }\n\n                if (document) {\n                    const { document: file, mime_type } = document;\n                    return [50, 50, file, mime_type, false];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        const { width, height, photo: file } = photoSize;\n                        return [width, height, file, '', false];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    const { width, height, video: file, mime_type, supports_streaming } = video;\n                    return [width, height, file, mime_type, supports_streaming && TdLibController.streaming];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                const { width, height, video: file, mime_type, supports_streaming } = video;\n                return [width, height, file, mime_type, supports_streaming && TdLibController.streaming];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, '', false];\n}\n\nexport function cancelLoadIVMediaViewerContent(blocks) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { animation, photo, video } = web_page;\n\n                        if (animation) {\n                            cancelLoadAnimationThumbnailContent(animation);\n                            cancelLoadAnimationContent(animation);\n                        }\n\n                        if (photo) {\n                            cancelLoadBigPhotoContent(photo);\n                        }\n\n                        if (video) {\n                            cancelLoadVideoThumbnailContent(video);\n                            cancelLoadVideoContent(video);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function loadIVMediaViewerContent(blocks, useSizeLimit = false) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, null, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, null);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, null);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, null);\n                    loadVideoContent(store, video, null, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function cancelPreloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    cancelLoadIVMediaViewerContent([blocks[index]]);\n    cancelLoadIVMediaViewerContent(blocks);\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nexport function preloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    loadIVMediaViewerContent([blocks[index]], false);\n    loadIVMediaViewerContent(preload, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId, full = false) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id, full);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId, full) {\n    if (!photo) return;\n\n    const { small, big } = photo;\n\n    loadChatFileContent(store, small, chatId);\n    if (full) loadChatFileContent(store, big, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background, false);\n    });\n}\n\nexport function loadBackgroundContent(store, background, full = false) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isCreator(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const { basic_group_id } = type;\n            const basicGroup = BasicGroupStore.get(basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (status) return false;\n\n            return status['@type'] === 'chatMemberStatusCreator';\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const { supergroup_id } = type;\n            const supergroup = SupergroupStore.get(supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            return status['@type'] === 'chatMemberStatusCreator';\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM, PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                // openDocument(audio, message, fileCancel);\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\n    text = text.replace(/<div>/gi, '<br>');\n    text = text.replace(/<\\/div>/gi, '');\n    text = text.split('<br>').join('\\n');\n\n    // 0 looking for html entities\n    text = getHTMLEntities(text, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    text = getMonoPreEntities(text, entities);\n\n    // 2 looking for bold, italic entities\n    text = getBoldItalicEntities(text, entities);\n\n    return { text, entities };\n}\n\nexport function getHTMLEntities(text, entities) {\n    const result = new DOMParser().parseFromString(text, 'text/html');\n\n    let offset = 0;\n    let length = 0;\n\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n\n    return text;\n}\n\nexport function getMonoPreEntities(text, entities) {\n    const mono = '`';\n    const pre = '```';\n    let isPre = false;\n\n    let index = -1;     // first index of end tag\n    let lastIndex = 0;  // first index after end tag\n    let start = -1;     // first index of start tag\n\n    let offset = 0, length = 0;\n\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    return text;\n}\n\nexport function getBoldItalicEntities(text, entities) {\n    const bold = '**';\n    const italic = '__';\n\n\n    let index = -1;     // first index of end tag\n    let lastIndex = 0;  // first index after end tag\n    let start = -1;     // first index of start tag\n\n    let offset = 0, length = 0;\n\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n\n    return text;\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","import { trimRightNull } from './Common';\n\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexport const UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | (buf[off + 2] << 7) | (buf[off + 1] << 14) | (buf[off] << 21);\n    },\n    len: 4\n};\n\nexport const UINT8 = {\n    get: (buf, off) => {\n        return buf[off];\n    }\n}\n\nexport const UINT32_BE = {\n    get: (buf, off) => {\n        return buf[off + 3] | (buf[off + 2] << 8) | (buf[off + 1] << 16) | (buf[off] << 24);\n    }\n}\n\nexport const UINT24_BE = {\n    get: (buf, off) => {\n        return buf[off + 2] | (buf[off + 1] << 8) | (buf[off] << 16);\n    }\n}\n\nexport const UINT16_BE = {\n    get: (buf, off) => {\n        return buf[off + 1] | (buf[off] << 8);\n    }\n}\n\nexport const ASCII_TEXT = {\n    get: (buf, off, len) => {\n        return new TextDecoder('ascii').decode(buf.slice(off, off + len));\n    }\n}\n\nexport const Id3v1StringType = {\n    get: (buf, off, len) => {\n        let value = new TextDecoder('ascii').decode(buf.slice(off, off + len));\n        value = trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}","import {Id3v1StringType, UINT8} from '../../Utils/Token';\n\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nexport const ID3v1Header = {\n    len: 128,\n\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = Id3v1StringType.get(buf, off, 3);\n        return header === 'TAG' ? {\n            header,\n            title: Id3v1StringType.get(buf, off + 3, 30),\n            artist: Id3v1StringType.get(buf, off + 33, 30),\n            album: Id3v1StringType.get(buf, off + 63, 30),\n            year: Id3v1StringType.get(buf, off + 93, 4),\n            comment: Id3v1StringType.get(buf, off + 97, 28),\n            // ID3v1.1 separator for track\n            zeroByte: UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: UINT8.get(buf, off + 126),\n            genre: UINT8.get(buf, off + 127)\n        } : null;\n    }\n};","import {ID3v1Header} from './ID3v1Token';\nimport {Id3v1StringType} from '../../Utils/Token';\n\nexport class ID3v1Parser {\n    parse(buffer) {\n        if (buffer.length < 128) {\n            console.log('[ID3v1Parser] Skip checking for ID3v1 because the file-size is less than 128 bytes');\n            return null;\n        }\n\n        return ID3v1Header.get(buffer, buffer.length - ID3v1Header.len);\n    }\n}\n\nexport function hasID3v1Header(buffer) {\n    if (buffer.length >= 128) {\n        const tag = Id3v1StringType.get(buffer, buffer.length - 128, 3);\n        return tag === 'TAG';\n    }\n    return false;\n}","import { strtokBITSET } from '../../Utils/Common';\nimport { UINT16_BE, UINT32_BE, ASCII_TEXT, UINT32SYNCSAFE } from '../../Utils/Token';\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n */\nexport const ID3v2Header = {\n    get: (buffer, offset) => {\n        // ID3v2/file identifier   'ID3'\n        const fileIdentifier = ASCII_TEXT.get(buffer, offset, 3); // new TextDecoder('ascii').decode(buffer.slice(offset, 3));\n\n        // ID3v2 versionIndex\n        const version = {\n            major: buffer[offset + 3],\n            revision: buffer[offset + 4]\n        };\n\n        // ID3v2 flags\n        const flags = {\n            raw: buffer[offset + 5],\n            // Unsynchronisation\n            unsynchronisation: strtokBITSET.get(buffer, offset + 5, 7),\n            // Extended header\n            isExtendedHeader: strtokBITSET.get(buffer, offset + 5, 6),\n            // Experimental indicator\n            expIndicator: strtokBITSET.get(buffer, offset + 5, 5),\n            footer: strtokBITSET.get(buffer, offset + 5, 4)\n        };\n\n        // ID3v2 size\n        // The ID3v2 tag size is the size of the complete tag after unsychronisation, including padding, excluding the header but not excluding the extended header\n        const size = UINT32SYNCSAFE.get(buffer, offset + 6);\n\n        return {\n            fileIdentifier,\n            version,\n            flags,\n            size\n        };\n    },\n    len: 10\n}\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_extended_header\n */\nexport const ExtendedHeader = {\n    len: 10,\n\n    get: (buf, off) => {\n        // Extended header size (10 or 6 excluding itself)\n        const size = UINT32_BE.get(buf, off);\n\n        // Extended Flags\n        const extendedFlags = UINT16_BE.get(buf, off + 4);\n\n        // Size of padding\n        const sizeOfPadding = UINT32_BE.get(buf, off + 6);\n\n        // CRC data present\n        const crcDataPresent = strtokBITSET.get(buf, off + 4, 31);\n\n        const crcData = crcDataPresent ? UINT32_BE.get(buf, off + 10) : null;\n\n        return {\n            size,\n            extendedFlags,\n            sizeOfPadding,\n            crcDataPresent,\n            crcData\n        };\n    }\n}\n\nexport const TextEncodingToken = {\n    len: 1,\n\n    get: (buf, off) => {\n        switch (buf[off]) {\n            case 0x00:\n                return { encoding: 'iso-8859-1' }; // binary\n            case 0x01:\n                return { encoding: 'utf16', bom: true };\n            case 0x02:\n                return { encoding: 'utf16', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n\n        }\n    }\n};","import {TextEncodingToken} from './ID3v2Token';\nimport {decodeString} from '../../Utils/Common';\n\nconst defaultEnc = 'iso-8859-1';\n\nexport class FrameParser {\n\n    /**\n     * Create id3v2 frame parser\n     * @param major - Major version, e.g. (4) for  id3v2.4\n     */\n    constructor(major)  {\n        this.major = major;\n    }\n\n    readData(b, type) {\n\n        if (b.length === 0) {\n            console.log(`id3v2.${this.major} header has empty tag type=${type}`);\n            return;\n        }\n\n        const {encoding, bom} = TextEncodingToken.get(b, 0);\n        let output = [];\n\n        console.debug(`Parsing tag type=${type}, encoding=${encoding}, bom=${bom}`);\n        switch (type) {\n            case 'TPE1': // 4.2.1. Text information frames - details\n            case 'TIT2': {\n                const text = decodeString(b.slice(1), encoding).replace(/\\x00+$/, '');\n                output = this.major >= 4 ? this.splitValue(type, text) : [text];\n            }\n            default:\n                //console.log('Warning: unsupported id3v2-tag-type: ' + type);\n                break;\n        }\n\n        return output;\n    }\n\n    /**\n     * id3v2.4 defines that multiple T* values are separated by 0x00\n     * id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n     * @param tag - Tag name\n     * @param text - Concatenated tag value\n     * @returns Split tag value\n     */\n    splitValue(tag, text) {\n        let values;\n        if (this.major < 4) {\n            values = text.split(/\\x00/g);\n            if (values.length > 1) {\n                console.log(`ID3v2.${this.major} ${tag} uses non standard null-separator.`);\n            } else {\n                values = text.split(/\\//g);\n            }\n        } else {\n            values = text.split(/\\x00/g);\n        }\n        return FrameParser.trimArray(values);\n    }\n\n    static trimArray(values) {\n        return values.map(value => value.replace(/\\x00+$/, '').trim());\n    }\n}","import { ExtendedHeader, ID3v2Header } from './ID3v2Token';\nimport { strtokBITSET } from '../../Utils/Common';\nimport { ASCII_TEXT, UINT24_BE, UINT32_BE, UINT32SYNCSAFE } from '../../Utils/Token';\nimport { FrameParser } from './FrameParser';\n\nexport class ID3v2Parser {\n    static removeUnsyncBytes(buffer) {\n        let readI = 0;\n        let writeI = 0;\n        while (readI < buffer.length - 1) {\n            if (readI !== writeI) {\n                buffer[writeI] = buffer[readI];\n            }\n            readI += (buffer[readI] === 0xFF && buffer[readI + 1] === 0) ? 2 : 1;\n            writeI++;\n        }\n        if (readI < buffer.length) {\n            buffer[writeI++] = buffer[readI];\n        }\n        return buffer.slice(0, writeI);\n    }\n\n    static readFrameData(buf, frameHeader, majorVer, includeCovers, warningCollector) {\n        const frameParser = new FrameParser(majorVer, warningCollector);\n        switch (majorVer) {\n            case 2:\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            case 3:\n            case 4:\n                if (frameHeader.flags.format.unsynchronisation) {\n                    buf = ID3v2Parser.removeUnsyncBytes(buf);\n                }\n                if (frameHeader.flags.format.data_length_indicator) {\n                    buf = buf.slice(4, buf.length);\n                }\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n    }\n\n    static readFrameFlags(b) {\n        return {\n            status: {\n                tag_alter_preservation: strtokBITSET.get(b, 0, 6),\n                file_alter_preservation: strtokBITSET.get(b, 0, 5),\n                read_only: strtokBITSET.get(b, 0, 4)\n            },\n            format: {\n                grouping_identity: strtokBITSET.get(b, 1, 7),\n                compression: strtokBITSET.get(b, 1, 3),\n                encryption: strtokBITSET.get(b, 1, 2),\n                unsynchronisation: strtokBITSET.get(b, 1, 1),\n                data_length_indicator: strtokBITSET.get(b, 1, 0)\n            }\n        };\n    }\n\n    static readFrameHeader(v, majorVer) {\n        let header;\n        switch (majorVer) {\n\n            case 2:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 3),\n                    length: UINT24_BE.get(v, 3)\n                };\n                break;\n\n            case 3:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32_BE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            case 4:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32SYNCSAFE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n\n        return header;\n    }\n\n    static getFrameHeaderLength(majorVer) {\n        switch (majorVer) {\n            case 2:\n                return 6;\n            case 3:\n            case 4:\n                return 10;\n            default:\n                throw new Error('header versionIndex is incorrect');\n        }\n    }\n\n    parseMetadata(data) {\n        let offset = 0;\n        const tags = [];\n\n        while (true) {\n            if (offset === data.length) break;\n\n            const frameHeaderLength = ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);\n            if (offset + frameHeaderLength > data.length) {\n                console.log('Illegal ID3v2 tag length');\n                break;\n            }\n\n            const frameHeaderBytes = data.slice(offset, offset += frameHeaderLength);\n            const frameHeader = ID3v2Parser.readFrameHeader(frameHeaderBytes, this.id3Header.version.major);\n\n            // Last frame. Check first char is a letter, bit of defensive programming\n            if (frameHeader.id === '' || frameHeader.id === '\\u0000\\u0000\\u0000\\u0000' || 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(frameHeader.id[0]) === -1) {\n                console.log('Illegal ID3v2 tag header', frameHeaderBytes, frameHeader.id);\n                break;\n            }\n\n            const frameDataBytes = data.slice(offset, offset += frameHeader.length);\n            const values = ID3v2Parser.readFrameData(frameDataBytes, frameHeader, this.id3Header.version.major, true, []);\n\n            console.log('[ID3v2Parser] parseMetadata', offset, frameHeader.length, frameHeader.id, values);\n            tags.push({ id: frameHeader.id, value: values });\n        }\n        return tags;\n    }\n\n    parseExtendedHeader(buffer) {\n        const extendedHeader = ExtendedHeader.get(buffer, 10);\n\n        return this.parseId3Data(buffer, this.id3Header.size + extendedHeader.size + 4, this.id3Header.size);\n    }\n\n    parseId3Data(buf, offset, dataLen) {\n        const buffer = buf.slice(offset, offset + dataLen);\n        return this.parseMetadata(buffer)\n    }\n\n    parse(buffer) {\n        const id3Header = ID3v2Header.get(buffer, 0);\n\n        this.id3Header = id3Header;\n        if (id3Header.fileIdentifier !== 'ID3') {\n            throw new Error('expected ID3-header file-identifier \\'ID3\\' was not found');\n        }\n\n        if (id3Header.flags.isExtendedHeader) {\n            return this.parseExtendedHeader(buffer);\n        } else {\n            return this.parseId3Data(buffer, ID3v2Header.len, id3Header.size);\n        }\n    }\n}\n\nexport function hasID3v2Header(buffer) {\n    if (buffer.length > 10) {\n        const tag = ASCII_TEXT.get(buffer, 0, 3);\n        return tag === 'ID3';\n    }\n    return false;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { hasID3v1Header, ID3v1Parser } from './ID3v1/ID3v1Parser';\nimport { hasID3v2Header, ID3v2Parser } from './ID3v2/ID3v2Parser';\n\nexport class ID3Parser {\n    getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    async parse(file) {\n        const tags = { artist: '', title: '' };\n        const result = { tags };\n\n        if (!file) return result;\n\n        const arrayBuffer = await this.getArrayBuffer(file);\n        if (!arrayBuffer) return result;\n\n        const buffer = new Uint8Array(arrayBuffer);\n        if (!buffer) return result;\n\n        if (hasID3v2Header(buffer)) {\n            const id3Tags = new ID3v2Parser().parse(buffer);\n            if (id3Tags) {\n                const artistTag = id3Tags.find(x => x.id === 'TPE1');\n                if (artistTag && artistTag.value.length > 0){\n                    tags.artist = artistTag.value[0];\n                }\n                const titleTag = id3Tags.find(x => x.id === 'TIT2');\n                if (titleTag && titleTag.value.length > 0){\n                    tags.title = titleTag.value[0];\n                }\n            }\n        } else if (hasID3v1Header(buffer)) {\n            const id3Tags = new ID3v1Parser().parse(buffer);\n\n            if (id3Tags) {\n                tags.artist = id3Tags.artist;\n                tags.title = id3Tags.title;\n            }\n        }\n\n        return result;\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\nimport { getRandomInt, readImageSize } from './Common';\nimport FileStore from '../Stores/FileStore';\nimport { ID3Parser } from '../Components/Player/Steaming/MP3/ID3Parser';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n\nexport async function getMediaTags(file) {\n    return new Promise(async resolve => {\n        const tag = await new ID3Parser().parse(file);\n\n        const { tags } = tag;\n        const { artist, title } = tags;\n\n        const audio = document.createElement('audio');\n        const url = URL.createObjectURL(file);\n\n        audio.src = url;\n        audio.addEventListener('loadedmetadata', function(){\n            URL.revokeObjectURL(url);\n            const duration = audio.duration;\n            audio.src = null;\n            resolve({ title, performer : artist, duration : Math.trunc(duration) });\n        },false);\n        audio.addEventListener('error', function() {\n            resolve(null);\n        });\n    })\n}\n\nexport async function getMediaDocumentFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileId = -getRandomInt(1, 1000000);\n    FileStore.setBlob(fileId, file);\n\n    const { name, type, size } = file;\n\n    if (type === 'audio/mp3') {\n        const tags = await getMediaTags(file);\n        if (tags) {\n            const { title, performer, duration } = tags;\n\n            return ({\n                '@type': 'messageAudio',\n                audio: {\n                    '@type': 'audio',\n                    duration,\n                    title,\n                    performer,\n                    file_name: name,\n                    mime_type: type,\n                    album_cover_minithumbnail: null,\n                    album_cover_thumbnail: null,\n                    audio: {\n                        '@type': 'file',\n                        id: fileId,\n                        size,\n                        expected_size: size,\n                        local: {\n                            is_downloading_completed: true\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    return ({\n        '@type': 'messageDocument',\n        document: {\n            '@type': 'document',\n            file_name: name,\n            mime_type: type,\n            minithumbnail: null,\n            thumbnail: null,\n            document: {\n                '@type': 'file',\n                id: fileId,\n                size,\n                expected_size: size,\n                local: {\n                    is_downloading_completed: true\n                }\n            }\n        }\n    });\n}\n\nexport async function getMediaPhotoFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    if (file.type.startsWith('image')) {\n        const [width, height] = await readImageSize(file);\n\n        const fileId = -getRandomInt(1, 1000000);\n        FileStore.setBlob(fileId, file);\n\n        const photoSize = {\n            '@type': 'photoSize',\n            photo: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            },\n            width,\n            height\n        };\n\n        return ({\n            '@type': 'messagePhoto',\n            photo: {\n                '@type': 'photo',\n                has_stickers: false,\n                minithumbnail: null,\n                sizes: [ photoSize ]\n            }\n        });\n    } else {\n        return null;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeek': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeeking': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    { thumbnailSrc && (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <>\n                            {thumbnailSrc && (\n                                <img\n                                    className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                                    draggable={false}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                />\n                            )}\n                        </>\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <>\n                            { thumbnailSrc && (\n                                <img\n                                    className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                                    draggable={false}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                />\n                            )}\n                        </>\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        const user = UserStore.get(userId);\n        const { is_contact, username } = user;\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                {!is_contact && username ? <div className='user-content dialog-content'>{'@' + username}</div> : <UserStatus userId={userId} /> }\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        // console.log('[photo] render', displaySize, fitPhotoSize);\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","export function LOG(message, ...optionalParams) {\n    return;\n    console.log(message, ...optionalParams);\n}\n\nexport function ERROR(message, ...optionalParams) {\n    console.error(message, ...optionalParams);\n}\n\nexport function logSourceBufferRanges (sourceBuffer, currentTime, duration) {\n    const ranges = [];\n    for (let i = 0; i < sourceBuffer.buffered.length; i++) {\n        ranges.push({ start: sourceBuffer.buffered.start(i), end: sourceBuffer.buffered.end(i)})\n    }\n\n    LOG('[SourceBuffer] ranges', sourceBuffer.id, currentTime, duration, sourceBuffer.pendingUpdates.length, JSON.stringify(ranges));\n}\n\nexport const strtokBITSET = {\n    get: (buf, off, bit) => {\n        return (buf[off] & (1 << bit)) !== 0;\n    },\n    len: 1\n};\n\nfunction readUTF16String(buffer) {\n    let offset = 2;\n    let label = 'utf-16';\n    if (buffer[0] === 0xFE && buffer[1] === 0xFF) { // big endian\n        offset = 2;\n        label = 'utf-16be';\n    } else if (buffer[0] === 0xFF && buffer[1] === 0xFE) { // little endian\n        offset = 2;\n        label = 'utf-16le';\n    }\n\n    return new TextDecoder(label).decode(buffer.slice(offset));\n}\n\nfunction readUTF8String(buffer) {\n    return new TextDecoder('utf-8').decode(buffer);\n}\n\nfunction readWindows1292String(buffer) {\n    return new TextDecoder('iso-8859-1').decode(buffer);\n}\n\n/**\n *\n * @param buffer Decoder input data\n * @param encoding 'utf16le' | 'utf16' | 'utf8' | 'iso-8859-1'\n * @return {string}\n */\nexport function decodeString(buffer, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (buffer[0] === 0xFF && buffer[1] === 0xFE && buffer[2] === 0xFE && buffer[3] === 0xFF) {\n        buffer = buffer.slice(2);\n    }\n\n    if (encoding === 'utf16le' || encoding === 'utf16') {\n        return readUTF16String(buffer);\n    } else if (encoding === 'utf8') {\n        return readUTF8String(buffer);\n    } else if (encoding === 'iso-8859-1') {\n        return readWindows1292String(buffer);\n    }\n\n    throw Error(encoding + ' encoding is not supported!');\n}\n\nexport function trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return {number} decoded bit aligned number\n */\nexport function getBitAllignedNumber(buf, byteOffset, bitOffset, len){\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = buf[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    } else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(buf, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is least significant bit\n * @return {boolean} decoded bit aligned number\n */\nexport function isBitSet(buf, byteOffset, bitOffset) {\n    return getBitAllignedNumber(buf, byteOffset, bitOffset, 1) === 1;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                (this.ivInView && !this.openIVMedia))\n        ) {\n            player.play();\n        } else {\n            player.pause();\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n        const source = src ? <source src={src} type={mime_type}/> : null;\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        >\n                            {source}\n                        </video>\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing, active } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioSubtitle(audio);\n        const audioSubtitle = getAudioShortTitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='audio-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action' style={{ opacity: active ? 0 : 1 }}>{audioSubtitle}</div>\n                    <VoiceNoteSlider className='audio-slider' chatId={chatId} messageId={messageId} duration={duration} style={{ opacity: active ? 1 : 0 }}/>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            seekProgress: 0,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    onClientUpdateMediaSeeking = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: update.value,\n                seeking: true,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: 0,\n                seeking: false,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, playerDuration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file, seekProgress, seeking } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const time = seeking ? seekProgress * playerDuration : update.currentTime;\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(time, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: active ? this.state.timeString : this.getTimeString(0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString} / ${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize} / ${size}` : `${size}`;\n        const strings = [];\n        if (!isDownloadingCompleted) {\n            strings.push(sizeString);\n        }\n        if (!isDownloadingActive) {\n            strings.push(timeString);\n        }\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {<span>{strings.join(', ')}</span>}\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport { getSupergroupId } from './Chat';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport function isPublicSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const supergroupId = getSupergroupId(chatId);\n    if (!supergroupId) return false;\n\n    const supergroup = SupergroupStore.get(supergroupId);\n    if (!supergroup) return false;\n\n    const { username } = supergroup;\n\n    return Boolean(username);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, dragging } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (messageId !== update.messageId) return;\n\n        const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n        const value = this.getValue(update.currentTime, playerDuration, active);\n\n        if (dragging) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration\n            });\n        } else {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, dragging } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            let value = this.state.value;\n            if (!dragging) {\n                value = this.getValue(active ? currentTime : 0, playerDuration, true);\n            }\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        this.setState({\n            dragging: true\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { chatId, messageId } = this.props;\n        const { value, active } = this.state;\n        if (!active) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaSeek',\n            chatId,\n            messageId,\n            value\n        });\n\n        this.setState({\n            dragging: false\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { chatId, messageId } = this.props;\n        const { active, dragging } = this.state;\n        if (!active) return;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaSeeking',\n                chatId,\n                messageId,\n                value\n            });\n        }\n\n        this.setState({\n            value\n        });\n    };\n\n    render() {\n        const { className, style } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className={classNames('voice-note-slider', className)} style={style}>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        thumb: 'voice-note-slider-thumb',\n                        active: 'voice-note-slider-active'\n                    }}\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    value={value}\n                    onChange={this.handleChange}\n                    onChangeCommitted={this.handleChangeCommitted}\n                    onMouseDown={this.handleMouseDown}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { clamp, getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.sourceRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n\n        const source = this.sourceRef.current;\n        if (!source) return;\n\n        if (source.src !== src) {\n            source.src = src;\n            player.load();\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = clamp(progressTime / videoDuration * 100, 0, 100);\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        >\n                            <source ref={this.sourceRef} src={null} type='video/mp4'/>\n                        </video>\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"db524e4eb064795d94a5.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            AppStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { isChatMember } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        const { chat_list } = chat;\n        if (chat_list && chat_list['@type'] !== type) {\n            return;\n        }\n\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0' && isChatMember(chat.id)) {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.chat_list) {\n                    ChatStore.updateChatChatList(x.id, x.chat_list);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities })\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        return {\n            left: this.divRef.current.offsetLeft,\n            top: this.divRef.current.offsetTop,\n            width: this.divRef.current.offsetWidth,\n            height: this.divRef.current.offsetHeight\n        }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('user-chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='user-chip-delete'>\n                    <CloseIcon className='user-chip-delete-icon'/>\n                </div>\n                <div className='user-chip-name'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            const currentHeight = wrapPanel.scrollHeight;\n            const currentOffsetHeight = wrapPanel.offsetHeight;\n\n            const expanded = currentHeight > prevHeight;\n            const collapsed = currentHeight < prevHeight;\n            // console.log('[wrap]', prevHeight, prevOffsetHeight, currentHeight, currentOffsetHeight, expanded, collapsed);\n\n            const maxHeight = 123;\n            if (expanded) {\n                if (prevHeight < maxHeight) {\n                    // console.log('[wrap] animate expand', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        setTimeout(() => {\n                            // console.log('[wrap] scrollIntoView');\n                            this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                        }, 250);\n                        // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] expand', prevHeight, maxHeight);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    //wrapPanel.scrollTop = wrapPanel.scrollHeight;\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                    // console.log('[wrap] expand', wrapPanel.style.cssText);\n                }\n            } else if (collapsed) {\n                if (currentHeight < maxHeight) {\n                    // console.log('[wrap] animate collapse', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] collapse', prevHeight, maxHeight, wrapPanel.scrollTop, prevScrollTop);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    wrapPanel.scrollTop = prevScrollTop;\n                    // console.log('[wrap] collapse', wrapPanel.style.cssText, wrapPanel.scrollTop);\n                }\n            } else {\n                if (isDeleting) {\n                    wrapPanel.style.cssText = prevCSSText;\n                    wrapPanel.scrollTop = prevScrollTop;\n                } else {\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                }\n            }\n\n            this.animateItems(prevMap);\n        });\n    };\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) {\n                        // new line on Enter+Cmd or Enter+Ctrl\n                        document.execCommand('insertLineBreak');\n                    }\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                } else if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        editMessage(chatId, 0);\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) {\n                        // new line on Enter+Cmd or Enter+Ctrl\n                        document.execCommand('insertLineBreak');\n                    }\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                } else if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            AppStore.changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport MP4Box from 'mp4box';\nimport { LOG, logSourceBufferRanges } from '../Utils/Common';\n\nexport default class MP4Source {\n    constructor(video, getBufferAsync) {\n        this.mp4file = null;\n        this.nextBufferStart = 0;\n        this.mediaSource = null;\n        this.ready = false;\n        this.bufferedTime = 40;\n\n        this.beforeMoovBufferSize = 32 * 1024;\n        this.moovBufferSize = 512 * 1024;\n        this.bufferSize = 1024 * 1024;\n        this.seekBufferSize = 1024 * 1024;\n\n        this.currentBufferSize = this.beforeMoovBufferSize;\n        this.nbSamples = 10;\n        this.video = video;\n        this.getBufferAsync = getBufferAsync;\n\n        this.seeking = false;\n        this.loading = false;\n        this.url = null;\n\n        this.init(video.duration);\n    }\n\n    init(videoDuration) {\n        const mediaSource = new MediaSource();\n        mediaSource.addEventListener('sourceopen', async () => {\n            LOG('[MediaSource] sourceopen start', this.mediaSource, this);\n\n            if (this.mediaSource.sourceBuffers.length > 0) return;\n\n            const mp4File = MP4Box.createFile();\n            mp4File.onMoovStart = () => {\n                LOG('[MP4Box] onMoovStart');\n                this.currentBufferSize = this.moovBufferSize;\n            };\n            mp4File.onError = error => {\n                LOG('[MP4Box] onError', error);\n            };\n            mp4File.onReady = info => {\n                LOG('[MP4Box] onReady', info);\n                this.ready = true;\n                this.currentBufferSize = this.bufferSize;\n                const { isFragmented, timescale, fragment_duration, duration } = info;\n\n                if (!fragment_duration && !duration) {\n                    this.mediaSource.duration = videoDuration;\n                    this.bufferedTime = videoDuration;\n                } else {\n                    this.mediaSource.duration = isFragmented\n                        ? fragment_duration / timescale\n                        : duration / timescale;\n                }\n\n                for (let i = 0; i < info.tracks.length; i++) {\n                    this.addSourceBuffer(mp4File, this.mediaSource, info.tracks[i]);\n                }\n\n                const initSegs = mp4File.initializeSegmentation();\n                LOG('[MP4Box] initializeSegmentation', initSegs);\n\n                for (let i = 0; i < initSegs.length; i++) {\n                    const { user: sourceBuffer } = initSegs[i];\n                    sourceBuffer.onupdateend = () => {\n                        sourceBuffer.initSegs = true;\n                        sourceBuffer.onupdateend = this.handleSourceBufferUpdateEnd;\n                    };\n                    sourceBuffer.appendBuffer(initSegs[i].buffer);\n                }\n\n                LOG('[MP4Box] start fragmentation');\n                mp4File.start();\n            };\n            mp4File.onSegment = (id, sourceBuffer, buffer, sampleNum, is_last) => {\n                const isLast = (sampleNum + this.nbSamples) > sourceBuffer.nb_samples;\n\n                LOG('[MP4Box] onSegment', id, buffer, `${sampleNum}/${sourceBuffer.nb_samples}`, isLast, sourceBuffer.timestampOffset);\n\n                if (mediaSource.readyState !== 'open') {\n                    return;\n                }\n\n                sourceBuffer.pendingUpdates.push({ id, buffer, sampleNum, isLast });\n                if (sourceBuffer.initSegs && !sourceBuffer.updating) {\n                    this.handleSourceBufferUpdateEnd({ target: sourceBuffer, mediaSource: this.mediaSource });\n                }\n            };\n\n            this.nextBufferStart = 0;\n            this.mp4file = mp4File;\n            LOG('[MediaSource] sourceopen end', this, this.mp4file);\n\n            this.loadNextBuffer();\n        });\n        mediaSource.addEventListener('sourceended', () => {\n            LOG('[MediaSource] sourceended', mediaSource.readyState);\n        });\n        mediaSource.addEventListener('sourceclose', () => {\n            LOG('[MediaSource] sourceclose', mediaSource.readyState);\n        });\n\n        this.mediaSource = mediaSource;\n    }\n\n    addSourceBuffer(file, source, track) {\n        if (!track) return null;\n\n        const { id, codec, type: trackType, nb_samples } = track;\n        const type = `video/mp4; codecs=\"${codec}\"`;\n        if (!MediaSource.isTypeSupported(type)) {\n            LOG('[addSourceBuffer] not supported', type);\n            return null;\n        }\n        // if (trackType !== 'video') {\n        //     LOG('[addSourceBuffer] skip', trackType);\n        //     return null;\n        // }\n\n        const sourceBuffer = source.addSourceBuffer(type);\n        sourceBuffer.id = id;\n        sourceBuffer.pendingUpdates = [];\n        sourceBuffer.nb_samples = nb_samples;\n        file.setSegmentOptions(id, sourceBuffer, { nbSamples: this.nbSamples });\n        LOG('[addSourceBuffer] add', id, codec, trackType);\n\n        return sourceBuffer;\n    }\n\n    handleSourceBufferUpdateEnd = event => {\n        const { target: sourceBuffer } = event;\n        const { mediaSource, mp4file } = this;\n\n        if (!sourceBuffer) return;\n        if (sourceBuffer.updating) return;\n\n        logSourceBufferRanges(sourceBuffer, 0, 0);\n\n        const { pendingUpdates } = sourceBuffer;\n        if (!pendingUpdates) return;\n        if (!pendingUpdates.length) {\n            if (sourceBuffer.isLast && mediaSource.readyState === 'open') {\n                LOG('[SourceBuffer] updateend endOfStream start', sourceBuffer.id);\n                if (Array.from(mediaSource.sourceBuffers).every(x => !x.pendingUpdates.length && !x.updating)) {\n                    mediaSource.endOfStream();\n                    LOG('[SourceBuffer] updateend endOfStream stop', sourceBuffer.id);\n                }\n            }\n            return;\n        }\n\n        const update = pendingUpdates.shift();\n        if (!update) return;\n\n        const { id, buffer, sampleNum, isLast } = update;\n\n        if (sampleNum) {\n            LOG('[SourceBuffer] updateend releaseUsedSamples', id, sampleNum);\n            mp4file.releaseUsedSamples(id, sampleNum);\n        }\n\n        LOG('[SourceBuffer] updateend end', sourceBuffer.id, sourceBuffer.pendingUpdates.length);\n        sourceBuffer.isLast = isLast;\n        sourceBuffer.appendBuffer(buffer);\n    };\n\n    getURL() {\n        this.url = this.url || URL.createObjectURL(this.mediaSource);\n\n        return this.url;\n    }\n\n    seek(currentTime, buffered) {\n        const seekInfo = this.mp4file.seek(currentTime, true);\n        this.nextBufferStart = seekInfo.offset;\n\n        let loadNextBuffer = buffered.length === 0;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime + this.bufferedTime > end) {\n                loadNextBuffer = true;\n                break;\n            }\n        }\n\n        LOG('[player] onSeeked', loadNextBuffer, currentTime, seekInfo, this.nextBufferStart);\n        if (loadNextBuffer) {\n            this.loadNextBuffer(true);\n        }\n    }\n\n    timeUpdate(currentTime, duration, buffered) {\n        const ranges = [];\n        for (let i = 0; i < buffered.length; i++) {\n            ranges.push({ start: buffered.start(i), end: buffered.end(i)})\n        }\n\n        let loadNextBuffer = buffered.length === 0;\n        let hasRange = false;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime <= end) {\n                hasRange = true;\n                if (end < duration && currentTime + this.bufferedTime > end) {\n                    loadNextBuffer = true;\n                    break;\n                }\n            }\n        }\n\n        if (!hasRange) {\n            loadNextBuffer = true;\n        }\n\n        LOG('[player] timeUpdate', loadNextBuffer, currentTime, duration, JSON.stringify(ranges));\n        if (loadNextBuffer) {\n            this.loadNextBuffer();\n        }\n    }\n\n    async loadNextBuffer(seek = false) {\n        const { nextBufferStart, loading, currentBufferSize, mp4file } = this;\n        LOG('[player] loadNextBuffer', nextBufferStart === undefined, loading, !mp4file);\n        if (!mp4file) return;\n        if (nextBufferStart === undefined) return;\n        if (loading) return;\n\n        this.loading = true;\n        const bufferSize = seek ? this.seekBufferSize : this.bufferSize;\n        const nextBuffer = await this.getBufferAsync(nextBufferStart, nextBufferStart + bufferSize);\n        nextBuffer.fileStart = nextBufferStart;\n\n        LOG('[player] loadNextBuffer start', nextBuffer.byteLength, nextBufferStart);\n        if (nextBuffer.byteLength) {\n            this.nextBufferStart = mp4file.appendBuffer(nextBuffer);\n        } else {\n            this.nextBufferStart = undefined;\n        }\n        LOG('[player] loadNextBuffer stop', nextBuffer.byteLength, nextBufferStart, this.nextBufferStart);\n\n        if (nextBuffer.byteLength < currentBufferSize) {\n            LOG('[player] loadNextBuffer flush');\n            this.mp4file.flush();\n        }\n\n        this.loading = false;\n        if (!this.ready) {\n            LOG('[player] loadNextBuffer next');\n            this.loadNextBuffer();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport MP4Source from '../Player/Steaming/MP4/MP4Source';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\nimport { LOG } from '../Player/Steaming/Utils/Common';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static async getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    static async getBufferAsync(fileId, start, end) {\n        const offset = start;\n        const limit = end - start;\n\n        // console.log('[GET_BUFFER] downloadFile');\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: 1,\n            offset,\n            limit,\n            synchronous: true\n        });\n\n        // console.log('[GET_BUFFER] readFilePart');\n\n        const filePart = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id: fileId,\n            offset,\n            count: limit\n        });\n\n        // console.log('[GET_BUFFER] getArrayBuffer');\n\n        const buffer = await MediaViewerContent.getArrayBuffer(filePart.data);\n\n        // console.log('[GET_BUFFER] result', result, buffer);\n\n        return buffer;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n                    src = source.getURL();\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n\n                    src = source.getURL();\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    handleSeeking = () => {\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onSeeking', currentTime);\n\n        if (this.prevTimeout) {\n            clearTimeout(this.prevTimeout);\n            this.prevTimeout = null;\n        }\n\n        this.prevTimeout = setTimeout(() => {\n            LOG('[player] onSeeking timeout', currentTime === video.currentTime, currentTime, video.currentTime);\n            if (currentTime === video.currentTime) {\n                this.handleSeeked(currentTime, buffered);\n            }\n        }, 150);\n    }\n\n    handleSeeked = (time, buffered) => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        source.seek(time, buffered);\n    }\n\n    handlePlayerSeeked = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onPlayerSeeked', currentTime);\n\n        source.seek(currentTime, buffered);\n    };\n\n    handleTimeUpdate = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleProgress = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleWaiting = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, buffered } = video;\n        source.seek(currentTime, buffered);\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                        onSeeking={this.handleSeeking}\n                        onSeeked={this.handlePlayerSeeked}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onWaiting={this.handleWaiting}\n                        onProgress={this.handleProgress}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {/*{ supportsStreaming && <a style={{ left: 0, top: 0, position: 'absolute' }} onClick={this.handleClick}>Load Buffer</a>}*/}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}